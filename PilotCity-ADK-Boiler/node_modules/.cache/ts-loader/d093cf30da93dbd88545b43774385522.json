{"remainingRequest":"/Users/parul/Desktop/PilotCity-ADK-Boiler/node_modules/thread-loader/dist/cjs.js!/Users/parul/Desktop/PilotCity-ADK-Boiler/node_modules/babel-loader/lib/index.js!/Users/parul/Desktop/PilotCity-ADK-Boiler/node_modules/ts-loader/index.js??ref--14-3!/Users/parul/Desktop/PilotCity-ADK-Boiler/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/parul/Desktop/PilotCity-ADK-Boiler/src/vue-apollo.ts","dependencies":[{"path":"/Users/parul/Desktop/PilotCity-ADK-Boiler/src/vue-apollo.ts","mtime":1608611444743},{"path":"/Users/parul/Desktop/PilotCity-ADK-Boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/parul/Desktop/PilotCity-ADK-Boiler/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/parul/Desktop/PilotCity-ADK-Boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/parul/Desktop/PilotCity-ADK-Boiler/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/parul/Desktop/PilotCity-ADK-Boiler/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/parul/Desktop/PilotCity-ADK-Boiler/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/parul/Desktop/PilotCity-ADK-Boiler/src/vue-apollo.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\r\nimport VueApollo from 'vue-apollo';\r\n\r\n//  Allows for using secure endpoint with apollo\r\nimport { setContext } from 'apollo-link-context';\r\nimport { ApolloClient } from 'apollo-boost';\r\n\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\n// Realm Setup\r\nimport * as RealmWeb from 'realm-web';\r\n\r\n// Name of the localStorage item\r\nconst AUTH_TOKEN = 'apollo-token';\r\n\r\n//  Mongo App Setup\r\n//  ! Replace with you App ID from Mongo Realm\r\nexport const APP_ID = 'programdev-aogmg';\r\n\r\nconst app = new RealmWeb.App({\r\n  id: APP_ID,\r\n  baseUrl: 'https://realm.mongodb.com'\r\n});\r\n\r\nconst graphql_url = `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\r\n// Http endpoint\r\nconst httpEndpoint = process.env.VUE_APP_GRAPHQL_HTTP || graphql_url;\r\nconst httpLink = createHttpLink({ uri: graphql_url });\r\n\r\nconst authorizationHeaderLink = setContext(async (_, { headers }) => {\r\n  if (app.currentUser) {\r\n    // Refreshing custom data also refreshes the access token\r\n    await app.currentUser.refreshCustomData();\r\n  } else {\r\n    // If no user is logged in, log in an anonymous user\r\n    await app.logIn(RealmWeb.Credentials.anonymous());\r\n  }\r\n  // Get a valid access token for the current user\r\n  const accessToken = app.currentUser?.accessToken;\r\n  // Set the Authorization header, preserving any other headers\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      Authorization: `Bearer ${accessToken}`\r\n    }\r\n  };\r\n});\r\n\r\nconst defaultOptions = {\r\n  // You can use `https` for secure connection (recommended in production)\r\n  httpEndpoint,\r\n  // You can use `wss` for secure connection (recommended in production)\r\n  // Use `null` to disable subscriptions\r\n  wsEndpoint: null,\r\n  // LocalStorage token\r\n  tokenName: AUTH_TOKEN,\r\n  // Enable Automatic Query persisting with Apollo Engine\r\n  persisting: false,\r\n  // Use websockets for everything (no HTTP)\r\n  // You need to pass a `wsEndpoint` for this to work\r\n  websocketsOnly: false,\r\n  // Is being rendered on the server?\r\n  ssr: false,\r\n\r\n  // Override default apollo link\r\n  // note: don't override httpLink here, specify httpLink options in the\r\n  // httpLinkOptions property of defaultOptions.\r\n  link: authorizationHeaderLink.concat(httpLink),\r\n\r\n  // Override default cache\r\n  cache: new InMemoryCache()\r\n\r\n  // Override the way the Authorization header is set\r\n  // getAuth: (tokenName) => ...\r\n\r\n  // Additional ApolloClient options\r\n  // apollo: { ... }\r\n\r\n  // Client local data (see apollo-link-state)\r\n  // clientState: { resolvers: { ... }, defaults: { ... } }\r\n};\r\n\r\nconst apolloClient = new ApolloClient({\r\n  ...defaultOptions,\r\n  connectToDevTools: process.env.NODE_ENV === 'development'\r\n});\r\n// Manually call this when user log in\r\nexport async function onLogin(token: string) {\r\n  if (typeof localStorage !== 'undefined' && token) {\r\n    localStorage.setItem(AUTH_TOKEN, token);\r\n  }\r\n  try {\r\n    await apolloClient.resetStore();\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.log('%cError on cache reset (login)', 'color: orange;', e.message);\r\n  }\r\n}\r\n\r\n// Manually call this when user log out\r\nexport async function onLogout() {\r\n  if (typeof localStorage !== 'undefined') {\r\n    localStorage.removeItem(AUTH_TOKEN);\r\n  }\r\n  try {\r\n    await apolloClient.resetStore();\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.log('%cError on cache reset (logout)', 'color: orange;', e.message);\r\n  }\r\n}\r\nconst provider = new VueApollo({\r\n  defaultClient: apolloClient\r\n});\r\nexport default provider;\r\n"],"sourceRoot":""}]}